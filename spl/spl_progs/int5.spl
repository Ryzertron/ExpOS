alias currPID R9;
alias userSP R10;
alias return_addr R11;
alias process_table R12;


//Routine work

userSP = SP;
currPID = [SYSTEM_STATUS_TABLE+1];
process_table = PROCESS_TABLE + (currPID * 16);


[process_table + 13] = SP;

SP = [process_table + 11] * 512 - 1;

alias physicalPageNum R1;
alias offset R2;
alias sysCallNoPhysicalAddr R3;

alias sysCallNo R4;
sysCallNo=[([PTBR + 2 * ((userSP - 5)/ 512)] * 512) + (userSP - 5) % 512];

physicalPageNum = [PTBR + 2 * ((userSP - 1)/ 512)];
offset = (userSP - 1) % 512;

return_addr = (physicalPageNum * 512) + offset;

//Settig Mode Flag
[process_table + 9] = sysCallNo;

//--------------------------------------Open SysCall 2

if (sysCallNo==2)then 
    alias pprtBase R5;
    alias pprtIndex R6;
    breakpoint;
    //Finding free entry in PPRT
    pprtBase = [process_table + 11] * 512 + RESOURCE_TABLE_OFFSET;
    pprtIndex = 0;
    while (pprtIndex<8 && [pprtBase + 2*pprtIndex]!=-1)do
        pprtIndex = pprtIndex + 1;
    endwhile;

    //No free entries
    if (pprtIndex == 8)then

        [return_addr] = -3;

        [process_table + 9] = 0;

        SP = [process_table + 13];
        ireturn;
    endif;

    alias fileName R2;
    fileName = [([PTBR + 2 * ((userSP - 4)/ 512)] * 512) + (userSP - 4) % 512];
	
    //Calling Open SysCall
    multipush(R4,R5,R6,R9,R10,R11,R12);
    R1 = 3;
    R2 = fileName;
    breakpoint;
    call FILE_MANAGER;
    multipop(R4,R5,R6,R9,R10,R11,R12);

    //If Open SysCall Fails
    if ( R0 < 0 )then

        [return_addr] = R0;

        [process_table + 9] = 0;

        SP = [process_table + 13];
        ireturn;
    endif;

    [pprtBase + 2*pprtIndex] = FILE;
    [pprtBase + 2*pprtIndex + 1] = R0;


    [return_addr] = pprtIndex;

    [process_table + 9] = 0;

    SP = [process_table + 13];
    ireturn;

endif;

//-------------------------------------------Close SysCall 3
if (sysCallNo==3)then 
    alias fileDescriptor R5;
    alias pprtBase R6;
    alias indexOFT R7;
    
    pprtBase = [process_table + 11] * 512 + RESOURCE_TABLE_OFFSET;

    fileDescriptor = [([PTBR + 2 * ((userSP - 4)/ 512)] * 512) + (userSP - 4) % 512];

    if (fileDescriptor<0 || fileDescriptor>=8 || [pprtBase + 2*fileDescriptor]!=FILE )then
        //Return Value
        [return_addr] = -1;

        // Reset Mode Flag
        [process_table + 9] = 0;

        //Reset User Stack
        SP = [process_table + 13];
        ireturn;
    endif;

    indexOFT = [pprtBase + 2*fileDescriptor + 1];

    //Calling Close SysCall
    multipush(R5,R6,R11,R12);
    R1 = 4;
    R2 = indexOFT;
    call FILE_MANAGER;
    multipop(R5,R6,R11,R12);
    

    [pprtBase + 2*fileDescriptor] = -1;

    //Returning File Descriptor
    [return_addr] = 0;

    [process_table + 9] = 0;

    SP = [process_table + 13];

    ireturn;

endif;
