//Load Idle
loadi(69,11);
loadi(70,12);

//load BOOT
loadi(54,67);
loadi(55,68);

SP = 76*512-1;
call BOOT_MODULE;

//For Idle
PTBR=PAGE_TABLE_BASE; //as PID of idle process is 0
PTLR = 10;

//Library
[PAGE_TABLE_BASE+0] = 63;
[PAGE_TABLE_BASE+1] = "0000";
[PAGE_TABLE_BASE+2] = 64;
[PAGE_TABLE_BASE+3] = "0000";

//Heap
[PAGE_TABLE_BASE+4] = -1;
[PAGE_TABLE_BASE+5] = "0000";
[PAGE_TABLE_BASE+6] = -1;
[PAGE_TABLE_BASE+7] = "0000";

//Code
[PAGE_TABLE_BASE+8] = 69;
[PAGE_TABLE_BASE+9] = "0100";
[PAGE_TABLE_BASE+10] = -1;
[PAGE_TABLE_BASE+11] = "0000";
[PAGE_TABLE_BASE+12] = -1;
[PAGE_TABLE_BASE+13] = "0000";
[PAGE_TABLE_BASE+14] = -1;
[PAGE_TABLE_BASE+15] = "0000";

//Stack
[PAGE_TABLE_BASE+16] = 70;
[PAGE_TABLE_BASE+17] = "0110";
[PAGE_TABLE_BASE+18] = -1;
[PAGE_TABLE_BASE+19] = "0000";

//Process table for Idle
[PROCESS_TABLE]=0;
[PROCESS_TABLE+1]=0;
[PROCESS_TABLE+3] = 0;
[PROCESS_TABLE+4]=RUNNING;
[PROCESS_TABLE+11]=76;
[PROCESS_TABLE+12]=0;
[PROCESS_TABLE+13]=4096;
[PROCESS_TABLE+14]=PAGE_TABLE_BASE;
[PROCESS_TABLE+15]=10;
[70*512]=[69*512+1];

//FOR SWAPPER DAEMON
PTBR = PAGE_TABLE_BASE + 15 * 20 ;
PTLR = 10;

//Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

//Process table for Swapper
[PROCESS_TABLE + 240]=0;
[PROCESS_TABLE+241]=15;
[PROCESS_TABLE+243] = 0;
[PROCESS_TABLE+244]=CREATED;
[PROCESS_TABLE+251]=82;
[PROCESS_TABLE+252]=0;
[PROCESS_TABLE+253]=4096;
[PROCESS_TABLE+254]=PTBR;
[PROCESS_TABLE+255]=10;
[81*512] = [69*512 +1];

PTBR = PAGE_TABLE_BASE;
[SYSTEM_STATUS_TABLE + 1] = 0;
SP = 4096;

ireturn;
